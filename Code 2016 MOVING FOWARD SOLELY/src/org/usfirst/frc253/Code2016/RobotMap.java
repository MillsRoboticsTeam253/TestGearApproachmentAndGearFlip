// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc253.Code2016;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.Talon;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;
import edu.wpi.first.wpilibj.util.*;
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import edu.wpi.first.wpilibj.PIDController;
import edu.wpi.first.wpilibj.Relay;
import edu.wpi.first.wpilibj.Spark;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.Victor;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import edu.wpi.first.wpilibj.util.*;
import edu.wpi.first.wpilibj.ADXL345_I2C;
import edu.wpi.first.wpilibj.I2C;
import edu.wpi.first.wpilibj.IterativeRobot;
import edu.wpi.first.wpilibj.command.Command;
import edu.wpi.first.wpilibj.command.Scheduler;
import edu.wpi.first.wpilibj.interfaces.Accelerometer;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
//    public static SpeedController liftSystemTalonLift1WindowMotor;
//    public static SpeedController liftSystemTalonLift2WindowMotor;
    public static final int driveMotorLeft = 2; // 2
	public static final int driveMotorLeft_Back = 3; //3
	//switching driveMotorLeft and driveMotorLeft_Back numbers has no apparent effect
	public static final int driveMotorRight = 0; //0
	public static final int driveMotorRight_Back = 1; //1
	
	public static Spark gearFlipFlip; 
	// ze pickup tooll
//	public static Relay ballPickUpSpike1;


	// Multiplier used to correct the direction of motors
	public static final int driveMotorLeftDir = -1; //-1
	public static final int driveMotorRightDir = 1; //1
	public static final int driveMotorRightBackDir = 1; //1
	public static final int driveMotorLeftBackDir = -1; //-1
	

	// Multiplier used for slower speed control
	public static final double CREEP_SPEED = 0.5;
	public static final double CREEP_SPEED_ULTRA = .125;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
//        liftSystemTalonLift1WindowMotor = new Talon(5);
//        LiveWindow.addActuator("LiftSystem", "TalonLift1WindowMotor", (Talon) liftSystemTalonLift1WindowMotor);
//        
//        liftSystemTalonLift2WindowMotor = new Talon(4);
//        LiveWindow.addActuator("LiftSystem", "TalonLift2WindowMotor", (Talon) liftSystemTalonLift2WindowMotor);
//        
//        ballPickUpSpike1 = new Relay(0);
//        LiveWindow.addActuator("BallPickUp", "Spike 1", ballPickUpSpike1);
//        
//        BallPickUpSystemTalon = new Talon(6);
    	gearFlipFlip = new Spark(4);
    	LiveWindow.addActuator("GearFlip", "Spark 1", gearFlipFlip);
    	
       // add the live window for this one later

    }

        
        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
